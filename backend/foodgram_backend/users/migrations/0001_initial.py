# Generated by Django 3.2.16 on 2024-11-13 11:30

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(help_text='Эмейл для входа и получения писем', max_length=254, unique=True, verbose_name='Эмейл')),
                ('username', models.CharField(help_text='Уникальный юзернейм (никнейм, псевдоним).', max_length=150, unique=True, verbose_name='Юзернейм')),
                ('first_name', models.CharField(help_text="Имя. Полное или ваше любимое сокращение, например 'Васёк'.", max_length=150, verbose_name='Имя')),
                ('last_name', models.CharField(help_text='Фамилия. Настоящая или выдуманная.', max_length=150, verbose_name='Фамилия')),
                ('avatar', models.ImageField(default=None, null=True, upload_to='users/avatars/')),
                ('role', models.CharField(choices=[('user', 'user'), ('admin', 'admin')], default='user', help_text=('Пользователь может быть либо', ' обычным юзером, либо админом.'), max_length=16, verbose_name='Пользовательская роль.')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
